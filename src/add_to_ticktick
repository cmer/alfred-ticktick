#!/usr/bin/env ruby

require 'json'
require 'net/http'

TICKTICK_HOST = "ticktick.com"
AUTH_URL      = "/api/v2/user/signon?wc=true&remember=true"
ADD_TASK_URL  = "/api/v2/task"

username = ENV['USERNAME']
password = ENV['PASSWORD']
title    = ARGV[0]

exit_message("Username and Password are required. Exiting.", 1) unless username && password
exit_message("Title is required. Exiting.", 1) if title.to_s.strip == ""

def add_task(username, password, task_title:)
  headers    = { 'Content-Type' => 'application/json' }

  http = Net::HTTP.new(TICKTICK_HOST, 443)
  http.use_ssl = true

  # Login
  resp, data  = http.post(AUTH_URL, { username: username, password: password}.to_json, headers)
      cookie = { 'Cookie' => resp.to_hash['set-cookie'].collect { |ea| ea[/^.*?;/] }.join }

  exit_message("Login failed. Exiting.", exit_code: 1) unless resp.is_a?(Net::HTTPOK) if JSON.parse(resp.body)["errorCode"]

  # Create Task
  data = { sortOrder: 1, title: task_title }.to_json
  resp, data = http.post(ADD_TASK_URL, data, headers.merge(cookie))

  if resp.is_a?(Net::HTTPOK)
    exit_message(message: "'#{task_title}' was added", title: "Task added successfully.")
  else
    exit_message("Task creation failed with code: #{resp.code}. Exiting.", exit_code: 1)
  end
end

def exit_message(message, exit_code: 0, title: nil, arg: nil)
  if title.nil?
    title = case exit_code
      when 0; 'Success!'
      else; 'An error occured'
    end
  end

  arg ||= message

  output = { title: title, subtitle: message }
  puts output.to_json
  exit exit_code
end

add_task(username, password, task_title: title)
